{"version":3,"sources":["ImageBoard.js","reportWebVitals.js","index.js"],"names":["ImageForm","props","state","imageUrl","imageCaption","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","addImage","id","onSubmit","type","text","onChange","Component","ImageList","ImageBoard","images","image","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAGMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,aAAc,IAGhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,+CAUnB,SAAYE,GACVC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAGpD,SAAaL,GACXA,EAAMM,iBACNL,KAAKR,MAAMc,SAAS,CAClBZ,SAAUM,KAAKP,MAAMC,SACrBC,aAAcK,KAAKP,MAAME,aACzBY,GAAI,IAGNP,KAAKC,SAAS,CAAEP,SAAU,GAAIC,aAAc,O,oBAG9C,WACE,OACE,uBAAMa,SAAUR,KAAKF,aAArB,UACE,uBAAOW,KAAK,OAAON,KAAK,WAAWC,MAAOJ,KAAKP,MAAMiB,KAAMC,SAAUX,KAAKJ,cAC1E,uBAAOa,KAAK,OAAON,KAAK,eAAeC,MAAOJ,KAAKP,MAAMiB,KAAMC,SAAUX,KAAKJ,cAC9E,wBAAQa,KAAK,SAAb,8B,GA/BgBG,aAqClBC,E,4JACJ,WACI,OACE,6BACE,6B,GAJcD,aAsETE,E,kDA1Cb,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXsB,OAAQ,IAEV,EAAKT,SAAW,EAAKA,SAAST,KAAd,gBALD,E,qDAOjB,WAeAG,KAAKC,SAAS,CAAEc,OAdD,CACb,CACER,GAAI,EACJb,SAAU,8JACVC,aAAc,oBAGhB,CACEY,GAAI,EACJb,SAAU,gKACVC,aAAc,4B,sBAOlB,SAASqB,GACP,IAAMD,EAAM,YAAQf,KAAKP,MAAMsB,QAC/BA,EAAOE,KAAKD,GACZhB,KAAKC,SAAU,CAAEc,a,oBAGnB,WACE,OACE,gCACE,cAAC,EAAD,CAAWT,SAAUN,KAAKM,WAC1B,cAAC,EAAD,CAAWS,OAAQf,KAAKP,MAAMsB,gB,GA3CfH,aChDVM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c7980e4a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './ImageBoard.css';\n\nclass ImageForm extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrl: '',\n      imageCaption: '',\n  }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    this.props.addImage({\n      imageUrl: this.state.imageUrl,\n      imageCaption: this.state.imageCaption,\n      id: 3\n    });\n\n    this.setState({ imageUrl: '', imageCaption: '' });\n  }\n\n  render(){\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" name=\"imageUrl\" value={this.state.text} onChange={this.handleInput}  />\n        <input type=\"text\" name=\"imageCaption\" value={this.state.text} onChange={this.handleInput}  />\n        <button type=\"submit\">Add Image</button>\n      </form>\n    )\n  }\n}\n\nclass ImageList extends Component {\n  render() {\n      return(\n        <ul>\n          <li></li>\n        </ul>\n      )\n    }\n  };\n// //   return(){\n// //   const images = props.addImage.map(image => (\n// //     <li key={image.id}>\n// //       <img src=\"{images.imageUrl}\" alt=\"\"/>\n// //       <p>{images.imageCaption}</p>\n// //     </li>\n// //   ));\n// // }\n//\n\n\nclass ImageBoard extends Component{\n\n  // first where are the images saved? STATE\n  // constructor\n  // setup the state object with images property (can be an empty array)\n  // if you want to add static images to start - do that in the ComponentDidMount lifecycle method\n  // use this.setState to update state properties\n  // write your addItem method that takes an image and adds it to the images array saved to state\n  constructor(props) {\n      super(props);\n      this.state = {\n        images: []\n      }\n      this.addImage = this.addImage.bind(this);\n      }\n    componentDidMount() {\n    const images = [\n      {\n        id: 1,\n        imageUrl: \"https://images.unsplash.com/photo-1548199973-03cce0bbc87b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80\",\n        imageCaption: 'Two Cute Puppies',\n\n      },\n      {\n        id: 2,\n        imageUrl: \"https://images.unsplash.com/photo-1537151608828-ea2b11777ee8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=678&q=80\",\n        imageCaption: 'Puppy with Big Ears',\n      }\n    ];\n\n    this.setState({ images });\n    }\n\n    addImage(image){\n      const images = [ ...this.state.images ];\n      images.push(image);\n      this.setState( { images });\n    }\n\n    render() {\n      return (\n        <div>\n          <ImageForm addImage={this.addImage} />\n          <ImageList images={this.state.images} />\n        </div>\n      )\n    }\n    }\n\n\nexport default ImageBoard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ImageBoard from './ImageBoard';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ImageBoard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}