{"version":3,"sources":["components/ImageList.js","components/ImageForm.js","components/ImageBoard.js","reportWebVitals.js","index.js"],"names":["ImageList","props","state","imageUrl","imageCaption","handleInput","bind","saveImage","this","setState","event","target","name","value","images","map","image","src","alt","id","Component","ImageForm","handleSubmit","preventDefault","addImage","onSubmit","type","placeholder","onChange","ImageBoard","counter","push","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAgCeA,E,kDA9Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,aAAc,IAEhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAPA,E,6CASnB,WACEE,KAAKC,SAAS,CAAEN,SAAU,GAAIC,aAAc,O,yBAG9C,SAAYM,GACVF,KAAKC,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,oBAEnD,WACE,IAAMC,EAASN,KAAKP,MAAMa,OAAOC,KAAI,SAACC,GAAD,OACnC,+BACA,qBAAKC,IAAKD,EAAMb,SAAUe,IAAI,KAC9B,4BAAIF,EAAMZ,iBAFDY,EAAMG,OAMf,OACE,6BAAML,Q,GA1BUM,aCsCTC,E,kDArCb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,aAAc,IAGhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKgB,aAAe,EAAKA,aAAahB,KAAlB,gBARH,E,+CAUnB,SAAYI,GACVF,KAAKC,SAAL,eAAiBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,0BAGpD,SAAaH,GACXA,EAAMa,iBACNf,KAAKP,MAAMuB,SAAS,CAClBrB,SAAUK,KAAKN,MAAMC,SACrBC,aAAcI,KAAKN,MAAME,eAG3BI,KAAKC,SAAS,CAAEN,SAAU,GAAIC,aAAc,O,oBAG9C,WACE,OACE,uBAAMqB,SAAUjB,KAAKc,aAArB,UACE,uBAAOI,KAAK,OAAOd,KAAK,WAAWe,YAAY,qBAAqBd,MAAOL,KAAKN,MAAMC,SAAUyB,SAAUpB,KAAKH,cAC/G,uBACA,uBAAOqB,KAAK,OAAOd,KAAK,eAAee,YAAY,yBAAyBd,MAAOL,KAAKN,MAAME,aAAcwB,SAAUpB,KAAKH,cAC3H,uBACA,wBAAQqB,KAAK,SAAb,8B,GAhCgBN,aC4ETS,E,kDAlDb,WAAY5B,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXY,OAAQ,GACRgB,QAAS,GAEX,EAAKN,SAAW,EAAKA,SAASlB,KAAd,gBAND,E,qDAQjB,WAoBAE,KAAKC,SAAS,CAAEK,OAnBD,CACb,CACEK,GAAI,EACJhB,SAAU,8JACVC,aAAc,oBAGhB,CACEe,GAAI,EACJhB,SAAU,gKACVC,aAAc,uBAEhB,CACEe,GAAG,EACHhB,SAAU,gKACVC,aAAc,4B,sBAOlB,SAASY,GACPA,EAAMG,GAAKX,KAAKN,MAAM4B,QACtB,IAAMhB,EAAM,YAAQN,KAAKN,MAAMY,QAC/BA,EAAOiB,KAAKf,GACZR,KAAKC,UAAS,SAACP,GAAD,MAAY,CAAEY,SAAQgB,QAAS5B,EAAM4B,QAAU,Q,oBAG/D,WACE,OACE,sBAAKE,UAAW,kBAAhB,UACE,wDACA,cAAC,EAAD,CAAWR,SAAUhB,KAAKgB,WAC1B,cAAC,EAAD,CAAWV,OAAQN,KAAKN,MAAMY,gB,GAnDfM,aCPVa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e0f6d733.chunk.js","sourcesContent":["import { Component } from 'react';\nclass ImageList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrl: '',\n      imageCaption: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.saveImage = this.saveImage.bind(this);\n  }\n  saveImage() {\n    this.setState({ imageUrl: '', imageCaption: ''});\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n  render() {\n    const images = this.props.images.map((image) => (\n      <li key={image.id}>\n      <img src={image.imageUrl} alt=\"\"/>\n      <p>{image.imageCaption}</p>\n      </li>\n    ));\n\n      return(\n        <ul>{ images }</ul>\n      )\n    }\n  }\n\nexport default ImageList;\n","import { Component } from 'react';\nclass ImageForm extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrl: '',\n      imageCaption: '',\n  }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    this.props.addImage({\n      imageUrl: this.state.imageUrl,\n      imageCaption: this.state.imageCaption,\n    });\n\n    this.setState({ imageUrl: '', imageCaption: '' });\n  }\n\n  render(){\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" name=\"imageUrl\" placeholder=\"Enter an Image URL\" value={this.state.imageUrl} onChange={this.handleInput}  />\n        <br/>\n        <input type=\"text\" name=\"imageCaption\" placeholder=\"Enter an Image Caption\" value={this.state.imageCaption} onChange={this.handleInput}  />\n        <br/>\n        <button type=\"submit\">Add Image</button>\n      </form>\n    )\n  }\n}\n\nexport default ImageForm;\n","import { Component } from 'react';\nimport './ImageBoard.css';\nimport ImageList from './ImageList';\nimport ImageForm from './ImageForm';\n\n\n\n\n// //   return(){\n// //   const images = props.addImage.map(image => (\n// //     <li key={image.id}>\n// //       <img src=\"{images.imageUrl}\" alt=\"\"/>\n// //       <p>{images.imageCaption}</p>\n// //     </li>\n// //   ));\n// // }\n//\n\n\nclass ImageBoard extends Component{\n\n  // first where are the images saved? STATE\n  // constructor\n  // setup the state object with images property (can be an empty array)\n  // if you want to add static images to start - do that in the ComponentDidMount lifecycle method\n  // use this.setState to update state properties\n  // write your addItem method that takes an image and adds it to the images array saved to state\n  constructor(props) {\n      super(props);\n      this.state = {\n        images: [],\n        counter: 4,\n      }\n      this.addImage = this.addImage.bind(this);\n      }\n    componentDidMount() {\n    const images = [\n      {\n        id: 1,\n        imageUrl: \"https://images.unsplash.com/photo-1548199973-03cce0bbc87b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80\",\n        imageCaption: 'Two Cute Puppies',\n\n      },\n      {\n        id: 2,\n        imageUrl: \"https://images.unsplash.com/photo-1537151608828-ea2b11777ee8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=678&q=80\",\n        imageCaption: 'Puppy with Big Ears',\n      },\n      {\n        id:3,\n        imageUrl: \"https://images.unsplash.com/photo-1581467655410-0c2bf55d9d6c?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=982&q=80\",\n        imageCaption: 'Another Cute Puppy!'\n      }\n    ];\n\n    this.setState({ images });\n    }\n\n    addImage(image){\n      image.id = this.state.counter;\n      const images = [ ...this.state.images ];\n      images.push(image);\n      this.setState((state) => ({ images, counter: state.counter + 1 }));\n    }\n\n    render() {\n      return (\n        <div className= \"image-container\">\n          <h1>Cute Puppy Image Board</h1>\n          <ImageForm addImage={this.addImage} />\n          <ImageList images={this.state.images} />\n        </div>\n      );\n    }\n    }\n\n\nexport default ImageBoard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ImageBoard from './components/ImageBoard';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ImageBoard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}